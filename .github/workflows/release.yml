on:
  workflow_dispatch:
    inputs:
      version:
        description: "The version to release"
        required: true

name: Release

concurrency:
  group: release
  cancel-in-progress: false

jobs:
  release:
    name: Generate Github release and tag

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Write version
        run: sed -i -E 's/^version = .*/version = "${{ github.event.inputs.version }}"/g' Cargo.toml

      - name: Commit new version
        run: |
          git config --global user.name '${{ github.actor }}'
          git config --global user.email '${{ github.actor }}@users.noreply.github.com'
          git add Cargo.toml
          git commit --message "Version ${{ github.event.inputs.version }}"
          git push

      - name: Create release
        run: gh release create "v${{ github.event.inputs.version }}" --draft --generate-notes --title "Version ${{ github.event.inputs.version }}" --latest
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-assets:
    name: Build Github assets and Cargo publish

    needs:
      - release

    strategy:
      fail-fast: true
      matrix:
        include:
          - host: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - host: windows-latest
            target: x86_64-pc-windows-msvc
          - host: windows-latest
            target: i686-pc-windows-msvc
          - host: macos-latest
            target: x86_64-apple-darwin

    runs-on: ${{ matrix.host }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          default: true
          target: ${{ matrix.target }}

      - name: Build
        run: cargo build --release --all-features --target ${{ matrix.target }}

      - name: Publish asset
        run: gh release edit "v${{ github.event.inputs.version }}" ${{ github.event.inputs.version }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to Cargo
        if: ${{ matrix.target == 'x86_64-unknown-linux-gnu' }}
        run: |
          cargo login --token "${{ secrets.CARGO_API_TOKEN }}"
          cargo publish

  publish:
    name: Publish Github release
    needs:
      - build-assets

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Publish release
        run: gh release edit "v${{ github.event.inputs.version }}" --draft=false
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
