// WHITESPACE = _{ " " | NEWLINE }
whitespace = _{ " " | NEWLINE }
start_marker = _{ "{%" }
end_marker = _{ "%}" }
keywords = _{ "if" | "elif" | "else" | "end" | "for" }
property = @{ ASCII_ALPHA ~ (ASCII_ALPHANUMERIC | "_" | "-")* }
properties = { property ~ ("." ~ property)* }
function = { "lower" | "upper" }
expression = { !keywords ~ properties ~ whitespace* ~ ("|" ~ whitespace* ~ function)* }
expression_template = { start_marker ~ whitespace* ~ expression ~ whitespace* ~ end_marker }
if_template = { start_marker ~ whitespace* ~ "if" ~ whitespace+ ~ expression ~ whitespace* ~ end_marker }
elif_template = { start_marker ~ whitespace* ~ "elif" ~ whitespace+ ~ expression ~ whitespace* ~ end_marker }
else_template = { start_marker ~ whitespace* ~ "else" ~ whitespace* ~ end_marker }
end_template = { start_marker ~ whitespace* ~ "end" ~ whitespace* ~ end_marker }
if_elif_else_template = { if_template ~ sub_template ~ elif_template* ~ sub_template ~ else_template? ~ sub_template  ~ end_template }
for_template = { start_marker ~ whitespace* ~ "for" ~ whitespace+ ~ property ~ whitespace+ ~ "in" ~ whitespace+ ~ expression ~ whitespace* ~ end_marker }
for_else_template = { for_template ~ sub_template ~ else_template? ~ sub_template ~ end_template }
template = { if_elif_else_template | for_else_template | expression_template }
character = @{ !start_marker ~ ANY }

sub_template = _{ (template | character)* }
file = { SOI ~ sub_template ~ EOI }
